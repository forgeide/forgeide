/*
 * $Id: DoNode.java 2430 2005-12-11 15:17:11Z sim $
 *
 * ace - a collaborative editor
 * Copyright (C) 2005 Mark Bigler, Simon Raess, Lukas Zbinden
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package ch.iserver.ace.algorithm.test;

import ch.iserver.ace.algorithm.Operation;

/**
 * A generation node represents the local generation of a 
 * new operation. Such a node must have the following properties.
 * 
 * <ul>
 *  <li>exactly one predecessor node</li>
 *  <li>exactly n successor nodes where n is the number of sites</li>
 *  <li>exactly one successor must be a local successor 
 *      (i.e. from the same site)</li>
 * </ul>
 */
public class DoNode extends AbstractGenerationNode {
	/** the operation to be generated. */
	private Operation operation;
		
	/**
	 * Creates a new generation node belonging to the given site. The
	 * <var>ref</var> contains the id of <var>op</var>, the operation
	 * to be generated.
	 * 
	 * @param siteId the id of the site this node belongs to
	 * @param ref the id reference to the operation
	 * @param op the operation to be generated
	 */
	public DoNode(String siteId, String ref, Operation op) {
		super(siteId, ref);
		this.operation = op;
	}

	/**
	 * Gets the operation to be generated by this node.
	 * 
	 * @return the operation to be generated
	 */
	public Operation getOperation() {
		return operation;
	}
	
	public void accept(NodeVisitor visitor) {
		visitor.visit(this);
	}
	
	public String toString() {
		return getClass().getName() 
				+ "[siteId=" + getParticipantId() 
				+ ",eventId=" + getEventId()
				+ ",operation=" + getOperation()
				+ "]";
	}
	
}
